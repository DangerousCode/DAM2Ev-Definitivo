package servidor;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.*;
import java.util.concurrent.Semaphore;
public class Hilo extends Thread{
	Socket socket;
	Semaphore semaforo;
	Bici[] bici;
	Hilo(Socket socket, Semaphore semaforo, Bici[] bici){
		this.socket=socket;
		this.semaforo=semaforo;
		this.bici=bici;
	}
	
	public void run(){
		try {
			ObjectInputStream ois=new ObjectInputStream(socket.getInputStream());
			ObjectOutputStream oos=new ObjectOutputStream(socket.getOutputStream());
			
			for (int i=0;i<bici.length;i++){
				if(!bici[i].isReservada()){
					semaforo.acquire();
					oos.writeObject(bici[i]);
					Bici bicicleta=(Bici) ois.readObject();
					bici[i]=bicicleta;
					System.out.println("Bicicleta reservada");
					semaforo.release();
					break;
				}
			}
		} catch (IOException e) {
			e.printStackTrace();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
