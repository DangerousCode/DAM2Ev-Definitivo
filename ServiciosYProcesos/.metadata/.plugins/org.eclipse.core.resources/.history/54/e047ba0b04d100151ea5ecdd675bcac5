package servidor;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.*;
import java.util.concurrent.Semaphore;

import bici.Bici;
public class Hilo extends Thread{
	Socket socket1;
	Semaphore semaforo;
	Bici[] bici;
	private Ventanas ventana;
	
	Hilo(Socket socket, Semaphore semaforo, Bici[] bici, Ventanas ventana){
		this.socket1=socket;
		this.semaforo=semaforo;
		this.bici=bici;
		this.ventana=ventana;
	}
	
	public void run(){
		try {
			Bici bicireserva=new Bici();
			int i=0;
			socket1.setTcpNoDelay(true);
			semaforo.acquire();
			
			while(i<bici.length && bici[i].isReservada()){
				i++;
			}
			
			ObjectOutputStream oos=new ObjectOutputStream(socket1.getOutputStream());
			
			oos.writeObject(bici[i]);
			
			ObjectInputStream ois=new ObjectInputStream(socket1.getInputStream());
			Bici bicicleta=(Bici) ois.readObject();

			
			bici[i]=bicicleta;
			OutputStream os=socket1.getOutputStream();
			if(bici[i].isReservada()){
				ventana.escribecadena("Bicicleta numero: "+bici[i].getNumero()+" reservada: "+bici[i].isReservada());
				//-------------------------------------------------------------------
				os.write("Bicicleta reservada correctamente".getBytes());
				//--------------------------------------------------------------------
			}else{
				ventana.escribecadena("No se ha podido reservar la bici numero: "+bici[i].getNumero());
				os.write("La bicicleta no ha podido ser reservada. Intentalo de nuevo.".getBytes());
			}
			
			semaforo.release();
			ois.close();
			oos.close();
			socket1.close();
			
		} catch (IOException e) {
			e.printStackTrace();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
